// <auto-generated />
using System;
using JinZhou.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JinZhou.Migrations
{
    [DbContext(typeof(JzDbContext))]
    [Migration("20181016124422_addAuthorizerToken")]
    partial class addAuthorizerToken
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("JinZhou.Models.DbEntities.AppAuthInfo", b =>
                {
                    b.Property<string>("AuthorizerAppId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(80);

                    b.Property<string>("AppId")
                        .HasMaxLength(80);

                    b.Property<bool>("Authorized");

                    b.Property<string>("AuthorizerUserName")
                        .HasMaxLength(200);

                    b.Property<string>("Code")
                        .HasMaxLength(160);

                    b.Property<DateTime>("CreateOn");

                    b.Property<DateTime>("ExpiredTime");

                    b.Property<DateTime>("LastUpdateOn");

                    b.HasKey("AuthorizerAppId");

                    b.HasIndex("AuthorizerUserName");

                    b.ToTable("AppAuths");
                });

            modelBuilder.Entity("JinZhou.Models.DbEntities.AuthorizerInfo", b =>
                {
                    b.Property<string>("UserName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200);

                    b.Property<string>("Alias")
                        .HasMaxLength(200);

                    b.Property<int>("BizCard");

                    b.Property<int>("BizPay");

                    b.Property<int>("BizScan");

                    b.Property<int>("BizShake");

                    b.Property<int>("BizStore");

                    b.Property<string>("HeadImg")
                        .HasMaxLength(255);

                    b.Property<string>("NickName")
                        .HasMaxLength(80);

                    b.Property<string>("PrincipalName")
                        .HasMaxLength(255);

                    b.Property<string>("QrcodeUrl")
                        .HasMaxLength(255);

                    b.Property<int>("ServiceType");

                    b.Property<int>("VerifyType");

                    b.HasKey("UserName");

                    b.ToTable("AuthorizerInfos");
                });

            modelBuilder.Entity("JinZhou.Models.DbEntities.AuthorizerToken", b =>
                {
                    b.Property<string>("AuthorizerAppId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(180);

                    b.Property<string>("AuthorizerAccessToken")
                        .HasMaxLength(180);

                    b.Property<string>("AuthorizerRefreshToken")
                        .HasMaxLength(180);

                    b.Property<DateTime>("CreateOn");

                    b.Property<int>("ExpiredIn");

                    b.Property<DateTime>("RefreshOn");

                    b.HasKey("AuthorizerAppId");

                    b.ToTable("AuthorizerTokens");
                });

            modelBuilder.Entity("JinZhou.Models.DbEntities.BasicToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccessToken")
                        .HasMaxLength(160);

                    b.Property<int>("AccessTokenExpiresIn");

                    b.Property<DateTime>("AccessTokenRefreshOn");

                    b.Property<string>("PreAuthCode")
                        .HasMaxLength(80);

                    b.Property<int>("PreAuthCodeExpiresIn");

                    b.Property<DateTime>("PreAuthCodeRefreshOn");

                    b.Property<string>("Ticket")
                        .HasMaxLength(100);

                    b.Property<DateTime>("TicketRefreshOn");

                    b.HasKey("Id");

                    b.ToTable("BasicTokens");
                });

            modelBuilder.Entity("JinZhou.Models.DbEntities.WxUserInfo", b =>
                {
                    b.Property<string>("OpenId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(180);

                    b.Property<string>("AppId")
                        .HasMaxLength(180);

                    b.Property<string>("City")
                        .HasMaxLength(50);

                    b.Property<string>("Country")
                        .HasMaxLength(50);

                    b.Property<string>("HeadImgUrl")
                        .HasMaxLength(255);

                    b.Property<string>("NickName")
                        .HasMaxLength(180);

                    b.Property<string>("Province")
                        .HasMaxLength(50);

                    b.Property<int>("Sex");

                    b.Property<string>("UnionId")
                        .HasMaxLength(180);

                    b.HasKey("OpenId");

                    b.ToTable("WxUserInfos");
                });

            modelBuilder.Entity("JinZhou.Models.DbEntities.AppAuthInfo", b =>
                {
                    b.HasOne("JinZhou.Models.DbEntities.AuthorizerInfo", "Authorizer")
                        .WithMany()
                        .HasForeignKey("AuthorizerUserName");
                });
#pragma warning restore 612, 618
        }
    }
}
